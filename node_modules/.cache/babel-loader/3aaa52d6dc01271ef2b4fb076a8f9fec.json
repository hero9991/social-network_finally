{"ast":null,"code":"import { logout, login } from \"../components/api/api\";\nconst GET_AUTH = 'GET_AUTH';\nconst LOGOUT = 'LOGOUT';\nconst initialState = {\n  id: null,\n  login: '',\n  email: '',\n  isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_AUTH:\n      return { ...state,\n        ...action.authInfo,\n        isAuth: true\n      };\n\n    case LOGOUT:\n      return { ...state,\n        isAuth: false,\n        id: null,\n        login: '',\n        email: ''\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const getAuth = authInfo => ({\n  type: GET_AUTH,\n  authInfo\n});\n\nconst logoutAC = () => ({\n  type: LOGOUT\n});\n\nexport const logoutThunk = () => dispatch => {\n  logout().then(response => {\n    if (response.data.resultCode === 0) dispatch(logoutAC());\n  });\n};\nexport const loginThunk = (email, password, rememberMe) => dispatch => {\n  login(email, password, rememberMe).then(response => {\n    if (response.data.resultCode === 0) dispatch(getAuth({\n      email,\n      id: response.data.data.userId\n    }));\n  });\n};\nexport default authReducer;","map":{"version":3,"sources":["/Users/a000/Desktop/react-soc-2/my-react-app/src/redux/auth-reducer.js"],"names":["logout","login","GET_AUTH","LOGOUT","initialState","id","email","isAuth","authReducer","state","action","type","authInfo","getAuth","logoutAC","logoutThunk","dispatch","then","response","data","resultCode","loginThunk","password","rememberMe","userId"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,uBAA9B;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,MAAM,GAAG,QAAf;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,EAAE,EAAE,IADa;AAEjBJ,EAAAA,KAAK,EAAE,EAFU;AAGjBK,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,MAAM,EAAE;AAJS,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACL,YAAP,EAAqBM,MAArB,KAAgC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,QAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAW,WAAGC,MAAM,CAACE,QAArB;AAA+BL,QAAAA,MAAM,EAAE;AAAvC,OAAP;;AACJ,SAAKJ,MAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAWF,QAAAA,MAAM,EAAE,KAAnB;AAA0BF,QAAAA,EAAE,EAAE,IAA9B;AAAoCJ,QAAAA,KAAK,EAAE,EAA3C;AAA+CK,QAAAA,KAAK,EAAE;AAAtD,OAAP;;AACJ;AAAS,aAAOG,KAAP;AALb;AAOH,CARD;;AAUA,OAAO,MAAMI,OAAO,GAAID,QAAD,KAAe;AAClCD,EAAAA,IAAI,EAAET,QAD4B;AAElCU,EAAAA;AAFkC,CAAf,CAAhB;;AAKP,MAAME,QAAQ,GAAG,OAAO;AACpBH,EAAAA,IAAI,EAAER;AADc,CAAP,CAAjB;;AAIA,OAAO,MAAMY,WAAW,GAAG,MAAOC,QAAD,IAAc;AAC3ChB,EAAAA,MAAM,GAAGiB,IAAT,CAAcC,QAAQ,IAAI;AACtB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoCJ,QAAQ,CAACF,QAAQ,EAAT,CAAR;AACvC,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMO,UAAU,GAAG,CAACf,KAAD,EAAQgB,QAAR,EAAkBC,UAAlB,KAAkCP,QAAD,IAAc;AACrEf,EAAAA,KAAK,CAACK,KAAD,EAAQgB,QAAR,EAAkBC,UAAlB,CAAL,CAAmCN,IAAnC,CAAwCC,QAAQ,IAAI;AAChD,QAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoCJ,QAAQ,CAACH,OAAO,CAAC;AAACP,MAAAA,KAAD;AAAQD,MAAAA,EAAE,EAAEa,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBK;AAA/B,KAAD,CAAR,CAAR;AAEvC,GAHD;AAIH,CALM;AAOP,eAAehB,WAAf","sourcesContent":["import { logout, login } from \"../components/api/api\"\n\nconst GET_AUTH = 'GET_AUTH'\nconst LOGOUT = 'LOGOUT'\n\nconst initialState = {\n    id: null,\n    login: '',\n    email: '',\n    isAuth: false\n}\n\nconst authReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case GET_AUTH:\n            return {...state, ...action.authInfo, isAuth: true}\n        case LOGOUT: \n            return {...state, isAuth: false, id: null, login: '', email: ''}\n        default: return state\n    }\n}\n\nexport const getAuth = (authInfo) => ({\n    type: GET_AUTH,\n    authInfo\n})\n\nconst logoutAC = () => ({\n    type: LOGOUT\n})\n\nexport const logoutThunk = () => (dispatch) => {\n    logout().then(response => {\n        if (response.data.resultCode === 0) dispatch(logoutAC())\n    })\n}\n\nexport const loginThunk = (email, password, rememberMe) => (dispatch) => {\n    login(email, password, rememberMe).then(response => {\n        if (response.data.resultCode === 0) dispatch(getAuth({email, id: response.data.data.userId}))\n        \n    })\n}\n\nexport default authReducer"]},"metadata":{},"sourceType":"module"}