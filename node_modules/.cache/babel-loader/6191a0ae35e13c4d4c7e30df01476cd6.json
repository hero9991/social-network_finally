{"ast":null,"code":"var _jsxFileName = \"/Users/a000/Desktop/react-soc-2/my-react-app/src/components/Login/LoginContainer.js\";\nimport React from 'react';\nimport Login from './Login';\nimport { connect } from 'react-redux';\nimport { logoutThunk, loginThunk } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\n\nconst LoginContainer = props => {\n  if (props.isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 30\n    }\n  });\n  return /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  logoutThunk,\n  loginThunk\n})(LoginContainer);","map":{"version":3,"sources":["/Users/a000/Desktop/react-soc-2/my-react-app/src/components/Login/LoginContainer.js"],"names":["React","Login","connect","logoutThunk","loginThunk","Redirect","LoginContainer","props","isAuth","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,0BAAxC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,MAAIA,KAAK,CAACC,MAAV,EAAkB,oBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAClB,sBACI,oBAAC,KAAD,oBAAWD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAGH,CALD;;AAOA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCF,EAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADa,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACO,eAAD,EAAkB;AAAEN,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAqDE,cAArD,CAAf","sourcesContent":["import React from 'react'\nimport Login from './Login'\nimport { connect } from 'react-redux'\nimport { logoutThunk, loginThunk } from '../../redux/auth-reducer'\nimport { Redirect } from 'react-router-dom'\n\nconst LoginContainer = (props) => {\n    if (props.isAuth) return <Redirect />\n    return (\n        <Login {...props}/>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\nexport default connect(mapStateToProps, { logoutThunk, loginThunk})(LoginContainer)"]},"metadata":{},"sourceType":"module"}