{"ast":null,"code":"import React,{useEffect}from'react';import Profile from'./Profile';import{connect}from'react-redux';import{setProfileThunk,getProfileStatusThunk,setProfileStatusThunk,setPost}from'../../redux/profile-reducer';import{withRouter}from'react-router-dom';import preloader from'../../assets/img/preloader.gif';import s from'./Profile.module.css';import{compose}from'redux';import withRedirect from'../hoc/withRedirect';var ProfileContainer=function ProfileContainer(props){useEffect(function(){var currentUser=props.match.params.id;if(!currentUser)currentUser=props.myId;if(currentUser){props.setProfileThunk(currentUser);props.getProfileStatusThunk(currentUser);}},[props.myId,props.status]);if(!props.isLoaded)return/*#__PURE__*/React.createElement(\"img\",{className:s.img,src:preloader,alt:\"\"});return/*#__PURE__*/React.createElement(Profile,Object.assign({},props,{currentUser:props.match.params.id}));};var mapStateToProps=function mapStateToProps(state){return{profileInfo:state.profilePage.profileInfo,isLoaded:state.profilePage.isLoaded,myId:state.auth.id,status:state.profilePage.status,posts:state.profilePage.posts};};export default compose(connect(mapStateToProps,{setProfileThunk:setProfileThunk,getProfileStatusThunk:getProfileStatusThunk,setProfileStatusThunk:setProfileStatusThunk,setPost:setPost}),withRedirect,withRouter)(ProfileContainer);","map":{"version":3,"sources":["/Users/a000/Desktop/react-soc-2/my-react-app/src/components/Profile/ProfileContainer.js"],"names":["React","useEffect","Profile","connect","setProfileThunk","getProfileStatusThunk","setProfileStatusThunk","setPost","withRouter","preloader","s","compose","withRedirect","ProfileContainer","props","currentUser","match","params","id","myId","status","isLoaded","img","mapStateToProps","state","profileInfo","profilePage","auth","posts"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,eAAT,CAA0BC,qBAA1B,CAAiDC,qBAAjD,CAAwEC,OAAxE,KAAuF,6BAAvF,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,OAASC,OAAT,KAAwB,OAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,CAChCb,SAAS,CAAC,UAAM,CAEZ,GAAIc,CAAAA,WAAW,CAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAArC,CACA,GAAI,CAACH,WAAL,CAAkBA,WAAW,CAAGD,KAAK,CAACK,IAApB,CAClB,GAAIJ,WAAJ,CAAiB,CACbD,KAAK,CAACV,eAAN,CAAsBW,WAAtB,EACAD,KAAK,CAACT,qBAAN,CAA4BU,WAA5B,EACH,CACJ,CARQ,CAQN,CAACD,KAAK,CAACK,IAAP,CAAaL,KAAK,CAACM,MAAnB,CARM,CAAT,CAUA,GAAI,CAACN,KAAK,CAACO,QAAX,CAAqB,mBAAO,2BAAK,SAAS,CAAEX,CAAC,CAACY,GAAlB,CAAuB,GAAG,CAAEb,SAA5B,CAAuC,GAAG,CAAC,EAA3C,EAAP,CACrB,mBACI,oBAAC,OAAD,kBAAaK,KAAb,EAAoB,WAAW,CAAEA,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAApD,GADJ,CAGH,CAfD,CAiBA,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCC,WAAW,CAAED,KAAK,CAACE,WAAN,CAAkBD,WADC,CAEhCJ,QAAQ,CAAEG,KAAK,CAACE,WAAN,CAAkBL,QAFI,CAGhCF,IAAI,CAAEK,KAAK,CAACG,IAAN,CAAWT,EAHe,CAIhCE,MAAM,CAAEI,KAAK,CAACE,WAAN,CAAkBN,MAJM,CAKhCQ,KAAK,CAAEJ,KAAK,CAACE,WAAN,CAAkBE,KALO,CAAZ,EAAxB,CAUA,cAAejB,CAAAA,OAAO,CAClBR,OAAO,CAACoB,eAAD,CAAkB,CAAEnB,eAAe,CAAfA,eAAF,CAAmBC,qBAAqB,CAArBA,qBAAnB,CAA0CC,qBAAqB,CAArBA,qBAA1C,CAAiEC,OAAO,CAAPA,OAAjE,CAAlB,CADW,CAElBK,YAFkB,CAGlBJ,UAHkB,CAAP,CAIbK,gBAJa,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport Profile from './Profile'\nimport { connect } from 'react-redux'\nimport { setProfileThunk, getProfileStatusThunk, setProfileStatusThunk, setPost } from '../../redux/profile-reducer'\nimport { withRouter } from 'react-router-dom'\nimport preloader from '../../assets/img/preloader.gif'\nimport s from './Profile.module.css'\nimport { compose } from 'redux'\nimport withRedirect from '../hoc/withRedirect'\n\nconst ProfileContainer = (props) => {\n    useEffect(() => {\n\n        let currentUser = props.match.params.id\n        if (!currentUser) currentUser = props.myId\n        if (currentUser) {\n            props.setProfileThunk(currentUser)\n            props.getProfileStatusThunk(currentUser)\n        }\n    }, [props.myId, props.status])\n\n    if (!props.isLoaded) return <img className={s.img} src={preloader} alt='' />\n    return (\n        <Profile {...props} currentUser={props.match.params.id} />\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    profileInfo: state.profilePage.profileInfo,\n    isLoaded: state.profilePage.isLoaded,\n    myId: state.auth.id,\n    status: state.profilePage.status,\n    posts: state.profilePage.posts\n})\n\n\n\nexport default compose(\n    connect(mapStateToProps, { setProfileThunk, getProfileStatusThunk, setProfileStatusThunk, setPost }),\n    withRedirect,\n    withRouter\n)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}