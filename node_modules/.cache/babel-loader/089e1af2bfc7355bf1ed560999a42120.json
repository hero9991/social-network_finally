{"ast":null,"code":"import { getProfile } from \"../components/api/api\";\nconst GET_PROFILE = 'GET_PROFILE';\nconst LOAD = 'LOAD';\nconst initialState = {\n  profileInfo: {},\n  isLoaded: false\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PROFILE:\n      return { ...state,\n        profileInfo: { ...action.profileInfo\n        }\n      };\n\n    case LOAD:\n      return { ...state,\n        isLoaded: action.isLoaded\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setProfile = profileInfo => ({\n  type: GET_PROFILE,\n  profileInfo\n});\nexport const load = isLoaded => ({\n  type: LOAD,\n  isLoaded\n});\nexport const setProfileThunk = () => dispatch => {\n  dispatch(load(false));\n  getProfile(currentUser).then(response => {\n    dispathc(load(true));\n    dispatch(setProfile(response.data));\n  });\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/a000/Desktop/react-soc-2/my-react-app/src/redux/profile-reducer.js"],"names":["getProfile","GET_PROFILE","LOAD","initialState","profileInfo","isLoaded","profileReducer","state","action","type","setProfile","load","setProfileThunk","dispatch","currentUser","then","response","dispathc","data"],"mappings":"AAAA,SAASA,UAAT,QAA2B,uBAA3B;AAEA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,IAAI,GAAG,MAAb;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;;AAKA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAL;AACI,aAAO,EAAE,GAAGM,KAAL;AAAYH,QAAAA,WAAW,EAAE,EAAE,GAAGI,MAAM,CAACJ;AAAZ;AAAzB,OAAP;;AACJ,SAAKF,IAAL;AACI,aAAO,EAAE,GAAGK,KAAL;AAAYF,QAAAA,QAAQ,EAAEG,MAAM,CAACH;AAA7B,OAAP;;AACJ;AAAS,aAAOE,KAAP;AALb;AAOH,CARD;;AAUA,OAAO,MAAMG,UAAU,GAAIN,WAAD,KAAkB;AACxCK,EAAAA,IAAI,EAAER,WADkC;AAExCG,EAAAA;AAFwC,CAAlB,CAAnB;AAIP,OAAO,MAAMO,IAAI,GAAIN,QAAD,KAAe;AAC/BI,EAAAA,IAAI,EAAEP,IADyB;AAE/BG,EAAAA;AAF+B,CAAf,CAAb;AAKP,OAAO,MAAMO,eAAe,GAAG,MAAOC,QAAD,IAAc;AAC/CA,EAAAA,QAAQ,CAACF,IAAI,CAAC,KAAD,CAAL,CAAR;AACAX,EAAAA,UAAU,CAACc,WAAD,CAAV,CAAwBC,IAAxB,CAA6BC,QAAQ,IAAI;AACrCC,IAAAA,QAAQ,CAACN,IAAI,CAAC,IAAD,CAAL,CAAR;AACAE,IAAAA,QAAQ,CAACH,UAAU,CAACM,QAAQ,CAACE,IAAV,CAAX,CAAR;AACH,GAHD;AAIH,CANM;AAQP,eAAeZ,cAAf","sourcesContent":["import { getProfile } from \"../components/api/api\"\n\nconst GET_PROFILE = 'GET_PROFILE'\nconst LOAD = 'LOAD'\n\nconst initialState = {\n    profileInfo: {},\n    isLoaded: false\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PROFILE:\n            return { ...state, profileInfo: { ...action.profileInfo } }\n        case LOAD:\n            return { ...state, isLoaded: action.isLoaded }\n        default: return state\n    }\n}\n\nexport const setProfile = (profileInfo) => ({\n    type: GET_PROFILE,\n    profileInfo\n})\nexport const load = (isLoaded) => ({\n    type: LOAD,\n    isLoaded\n})\n\nexport const setProfileThunk = () => (dispatch) => {\n    dispatch(load(false))\n    getProfile(currentUser).then(response => {\n        dispathc(load(true))\n        dispatch(setProfile(response.data))\n    })\n}\n\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}