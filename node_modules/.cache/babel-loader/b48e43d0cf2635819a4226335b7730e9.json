{"ast":null,"code":"const {\n  getAuthThunk\n} = require(\"./auth-reducer\");\n\nconst INITIALIZE = 'INITIALIZE';\nconst initialState = {\n  isInitialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZE:\n      return { ...state,\n        isInitialized: true\n      };\n      de;\n  }\n};\n\nconst initialize = () => ({\n  type: INITIALIZE\n});\n\nexport const initializeThunk = () => dispatch => {\n  const promise = getAuthThunk();\n  Promise.all([promise]).then(() => {\n    dispatch(initialize);\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["/Users/a000/Desktop/react-soc-2/my-react-app/src/redux/app-reducer.js"],"names":["getAuthThunk","require","INITIALIZE","initialState","isInitialized","appReducer","state","action","type","de","initialize","initializeThunk","dispatch","promise","Promise","all","then"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAmBC,OAAO,CAAC,gBAAD,CAAhC;;AAEA,MAAMC,UAAU,GAAG,YAAnB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE;AADE,CAArB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAACH,YAAP,EAAqBI,MAArB,KAAgC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,UAAL;AACI,aAAO,EAAC,GAAGI,KAAJ;AAAWF,QAAAA,aAAa,EAAE;AAA1B,OAAP;AACJK,MAAAA,EAAE;AAHN;AAKH,CAND;;AAQA,MAAMC,UAAU,GAAG,OAAO;AACtBF,EAAAA,IAAI,EAAEN;AADgB,CAAP,CAAnB;;AAIA,OAAO,MAAMS,eAAe,GAAG,MAAOC,QAAD,IAAc;AAC/C,QAAMC,OAAO,GAAGb,YAAY,EAA5B;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACCG,IADD,CACM,MAAM;AACRJ,IAAAA,QAAQ,CAACF,UAAD,CAAR;AACH,GAHD;AAIH,CANM;AAQP,eAAeL,UAAf","sourcesContent":["const { getAuthThunk } = require(\"./auth-reducer\")\n\nconst INITIALIZE = 'INITIALIZE'\n\nconst initialState = {\n    isInitialized: false\n}\n\nconst appReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case INITIALIZE:\n            return {...state, isInitialized: true}\n        de\n    }\n}\n\nconst initialize = () => ({\n    type: INITIALIZE\n}) \n\nexport const initializeThunk = () => (dispatch) => {\n    const promise = getAuthThunk()\n    Promise.all([promise])\n    .then(() => {\n        dispatch(initialize)\n    })\n}\n\nexport default appReducer"]},"metadata":{},"sourceType":"module"}