{"ast":null,"code":"var _jsxFileName = \"/Users/a000/Desktop/react-soc-2/my-react-app/src/components/Login/Login.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { minLength, required } from '../utilits/validators/validators';\nimport { Input } from '../FormsControls/FormsControls';\nconst minLength5 = minLength(5);\n\nconst LoginForm = props => {\n  return props.isAuth ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"logOut\")) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validate: [required],\n    component: Input,\n    name: \"login\",\n    placeholder: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    validate: [minLength5, required],\n    component: Input,\n    name: \"password\",\n    placeholder: \"Password\",\n    type: 'password',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"error\\\"\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: \"input\",\n    name: \"rememberMe\",\n    type: 'checkbox',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), \"Remember me\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = data => {\n    props.isAuth ? props.logoutThunk() : props.loginThunk(data.login, data.password, data.rememberMe);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(LoginReduxForm, {\n    onSubmit: onSubmit,\n    isAuth: props.isAuth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/a000/Desktop/react-soc-2/my-react-app/src/components/Login/Login.js"],"names":["React","Field","reduxForm","minLength","required","Input","minLength5","LoginForm","props","isAuth","handleSubmit","LoginReduxForm","form","Login","onSubmit","data","logoutThunk","loginThunk","login","password","rememberMe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,kCAApC;AACA,SAASC,KAAT,QAAsB,gCAAtB;AAEA,MAAMC,UAAU,GAAGH,SAAS,CAAC,CAAD,CAA5B;;AAEA,MAAMI,SAAS,GAAIC,KAAD,IAAW;AACzB,SAAOA,KAAK,CAACC,MAAN,gBACH;AAAM,IAAA,QAAQ,EAAED,KAAK,CAACE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADG,gBAID;AAAM,IAAA,QAAQ,EAAEF,KAAK,CAACE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAE,CAACN,QAAD,CAAjB;AAA6B,IAAA,SAAS,EAAEC,KAAxC;AAA+C,IAAA,IAAI,EAAC,OAApD;AAA4D,IAAA,WAAW,EAAC,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAE,CAACC,UAAD,EAAaF,QAAb,CAAjB;AAAyC,IAAA,SAAS,EAAEC,KAApD;AAA2D,IAAA,IAAI,EAAC,UAAhE;AAA2E,IAAA,WAAW,EAAC,UAAvF;AAAkG,IAAA,IAAI,EAAE,UAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,IAAI,EAAC,YAA9B;AAA2C,IAAA,IAAI,EAAE,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,gBAVF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAbF,CAJN;AAqBH,CAtBD;;AAwBA,MAAMM,cAAc,GAAGT,SAAS,CAAC;AAAEU,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAT,CAA6BL,SAA7B,CAAvB;;AAEA,MAAMM,KAAK,GAAIL,KAAD,IAAW;AACrB,QAAMM,QAAQ,GAAIC,IAAD,IAAU;AACvBP,IAAAA,KAAK,CAACC,MAAN,GACID,KAAK,CAACQ,WAAN,EADJ,GAEMR,KAAK,CAACS,UAAN,CAAiBF,IAAI,CAACG,KAAtB,EAA6BH,IAAI,CAACI,QAAlC,EAA4CJ,IAAI,CAACK,UAAjD,CAFN;AAGH,GAJD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEN,QAA1B;AAAoC,IAAA,MAAM,EAAEN,KAAK,CAACC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAZD;;AAcA,eAAeI,KAAf","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { minLength, required } from '../utilits/validators/validators'\nimport { Input } from '../FormsControls/FormsControls'\n\nconst minLength5 = minLength(5)\n\nconst LoginForm = (props) => {\n    return props.isAuth ?\n        <form onSubmit={props.handleSubmit}>\n            <button>logOut</button>\n        </form>\n        : <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field validate={[required]} component={Input} name='login' placeholder='Login' />\n            </div>\n            <div>\n                <Field validate={[minLength5, required]} component={Input} name='password' placeholder='Password' type={'password'}/>\n            </div>\n            <div>\n                error\"\n            </div>\n            <div>\n                <Field component='input' name='rememberMe' type={'checkbox'} />Remember me\n            </div>\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n}\n\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (data) => {\n        props.isAuth ?\n            props.logoutThunk()\n            : props.loginThunk(data.login, data.password, data.rememberMe)\n    }\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit} isAuth={props.isAuth} />\n        </div>\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}