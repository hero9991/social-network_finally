{"ast":null,"code":"var _jsxFileName = \"/Users/a000/Desktop/react-soc-2/my-react-app/src/components/Users/UsersContainer.js\";\nimport React, { useEffect } from 'react';\nimport Users from './Users';\nimport { setUsers, changePage } from '../../redux/users-reducer';\nimport { connect } from 'react-redux';\nimport { getUsers } from '../api/api';\nim;\n\nconst UsersContainer = props => {\n  useEffect(() => {\n    getUsers(props.trueUsersCount, props.activePage).then(response => {\n      props.setUsers(response.data.items, response.data.totalCount);\n    });\n  }, [props.activePage]);\n  if (props.isLoaded === false) return preloader;\n  return /*#__PURE__*/React.createElement(Users, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  users: state.usersPage.users,\n  trueUsersCount: state.usersPage.trueUsersCount,\n  activePage: state.usersPage.activePage,\n  usersCount: state.usersPage.usersCount,\n  isLoaded: state.usersPage.isLoaded\n});\n\nexport default connect(mapStateToProps, {\n  setUsers,\n  changePage\n})(UsersContainer);","map":{"version":3,"sources":["/Users/a000/Desktop/react-soc-2/my-react-app/src/components/Users/UsersContainer.js"],"names":["React","useEffect","Users","setUsers","changePage","connect","getUsers","im","UsersContainer","props","trueUsersCount","activePage","then","response","data","items","totalCount","isLoaded","preloader","mapStateToProps","state","users","usersPage","usersCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,2BAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACAC,EAAE;;AACF,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9BR,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,QAAQ,CAACG,KAAK,CAACC,cAAP,EAAuBD,KAAK,CAACE,UAA7B,CAAR,CAAiDC,IAAjD,CAAsDC,QAAQ,IAAI;AAC9DJ,MAAAA,KAAK,CAACN,QAAN,CAAeU,QAAQ,CAACC,IAAT,CAAcC,KAA7B,EAAoCF,QAAQ,CAACC,IAAT,CAAcE,UAAlD;AAA8D,KADlE;AAEH,GAHQ,EAGN,CAACP,KAAK,CAACE,UAAP,CAHM,CAAT;AAIA,MAAIF,KAAK,CAACQ,QAAN,KAAmB,KAAvB,EAA8B,OAAOC,SAAP;AAC9B,sBACI,oBAAC,KAAD,oBAAWT,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAGH,CATD;;AAWA,MAAMU,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBD,KADS;AAEhCX,EAAAA,cAAc,EAAEU,KAAK,CAACE,SAAN,CAAgBZ,cAFA;AAGhCC,EAAAA,UAAU,EAAES,KAAK,CAACE,SAAN,CAAgBX,UAHI;AAIhCY,EAAAA,UAAU,EAAEH,KAAK,CAACE,SAAN,CAAgBC,UAJI;AAKhCN,EAAAA,QAAQ,EAAEG,KAAK,CAACE,SAAN,CAAgBL;AALM,CAAZ,CAAxB;;AASA,eAAeZ,OAAO,CAACc,eAAD,EAAkB;AAAChB,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAlB,CAAP,CAAiDI,cAAjD,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport Users from './Users'\nimport { setUsers, changePage } from '../../redux/users-reducer'\nimport { connect } from 'react-redux'\nimport { getUsers } from '../api/api'\nim\nconst UsersContainer = (props) => {\n    useEffect(() => {\n        getUsers(props.trueUsersCount, props.activePage).then(response => {\n            props.setUsers(response.data.items, response.data.totalCount)})\n    }, [props.activePage])\n    if (props.isLoaded === false) return preloader\n    return (\n        <Users {...props}/>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    users: state.usersPage.users,\n    trueUsersCount: state.usersPage.trueUsersCount,\n    activePage: state.usersPage.activePage,\n    usersCount: state.usersPage.usersCount,\n    isLoaded: state.usersPage.isLoaded\n})\n\n\nexport default connect(mapStateToProps, {setUsers, changePage})(UsersContainer)"]},"metadata":{},"sourceType":"module"}