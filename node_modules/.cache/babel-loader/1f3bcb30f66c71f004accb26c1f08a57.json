{"ast":null,"code":"const GET_USERS = 'GET_USERS';\nconst CHANGE_PAGE = 'CHANGE_PAGE';\nconst LOAD = 'LOAD';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst DISABLE = 'DISABLE';\nconst ENABLE = 'ENABLE';\nlet initialState = {\n  users: [],\n  usersCount: 0,\n  trueUsersCount: 100,\n  activePage: 1,\n  isLoaded: false,\n  isDisabled: false\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USERS:\n      return { ...state,\n        users: [...action.users],\n        usersCount: action.usersCount\n      };\n\n    case CHANGE_PAGE:\n      return { ...state,\n        activePage: action.activePage\n      };\n\n    case LOAD:\n      return { ...state,\n        isLoaded: action.isLoaded\n      };\n\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(item => item.id === action.userId ? { ...item,\n          followed: true\n        } : item)\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(item => item.id === action.userId ? { ...item,\n          followed: false\n        } : item)\n      };\n\n    case DISABLE:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = (users, usersCount) => ({\n  type: GET_USERS,\n  users,\n  usersCount\n});\nexport const changePage = activePage => ({\n  type: CHANGE_PAGE,\n  activePage\n});\nexport const load = isLoaded => ({\n  type: LOAD,\n  isLoaded\n});\nexport const follow = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport default usersReducer;","map":{"version":3,"sources":["/Users/a000/Desktop/react-soc-2/my-react-app/src/redux/users-reducer.js"],"names":["GET_USERS","CHANGE_PAGE","LOAD","FOLLOW","UNFOLLOW","DISABLE","ENABLE","initialState","users","usersCount","trueUsersCount","activePage","isLoaded","isDisabled","usersReducer","state","action","type","map","item","id","userId","followed","setUsers","changePage","load","follow","unfollow"],"mappings":"AACA,MAAMA,SAAS,GAAG,WAAlB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,MAAM,GAAG,QAAf;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,UAAU,EAAE,CAFG;AAGfC,EAAAA,cAAc,EAAE,GAHD;AAIfC,EAAAA,UAAU,EAAE,CAJG;AAKfC,EAAAA,QAAQ,EAAE,KALK;AAMfC,EAAAA,UAAU,EAAE;AANG,CAAnB;;AASA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAEnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,SAAL;AACI,aAAO,EAAE,GAAGe,KAAL;AAAYP,QAAAA,KAAK,EAAE,CAAC,GAAGQ,MAAM,CAACR,KAAX,CAAnB;AAAsCC,QAAAA,UAAU,EAAEO,MAAM,CAACP;AAAzD,OAAP;;AACJ,SAAKR,WAAL;AACI,aAAO,EAAE,GAAGc,KAAL;AAAYJ,QAAAA,UAAU,EAAEK,MAAM,CAACL;AAA/B,OAAP;;AACJ,SAAKT,IAAL;AACI,aAAO,EAAE,GAAGa,KAAL;AAAYH,QAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAA7B,OAAP;;AACJ,SAAKT,MAAL;AACI,aAAO,EAAE,GAAGY,KAAL;AAAYP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,MAAnB,GAA4B,EAAC,GAAGF,IAAJ;AAAUG,UAAAA,QAAQ,EAAE;AAApB,SAA5B,GAAyDH,IAAjF;AAAnB,OAAP;;AACJ,SAAKf,QAAL;AACI,aAAO,EAAE,GAAGW,KAAL;AAAYP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,MAAnB,GAA4B,EAAC,GAAGF,IAAJ;AAAUG,UAAAA,QAAQ,EAAE;AAApB,SAA5B,GAAyDH,IAAjF;AAAnB,OAAP;;AACJ,SAAKd,OAAL;AACI,aAAO,EAAP;;AACJ;AAAS,aAAOU,KAAP;AAbb;AAeH,CAjBD;;AAmBA,OAAO,MAAMQ,QAAQ,GAAG,CAACf,KAAD,EAAQC,UAAR,MAAwB;AAC5CQ,EAAAA,IAAI,EAAEjB,SADsC;AAE5CQ,EAAAA,KAF4C;AAG5CC,EAAAA;AAH4C,CAAxB,CAAjB;AAKP,OAAO,MAAMe,UAAU,GAAIb,UAAD,KAAiB;AACvCM,EAAAA,IAAI,EAAEhB,WADiC;AAEvCU,EAAAA;AAFuC,CAAjB,CAAnB;AAIP,OAAO,MAAMc,IAAI,GAAIb,QAAD,KAAe;AAC/BK,EAAAA,IAAI,EAAEf,IADyB;AAE/BU,EAAAA;AAF+B,CAAf,CAAb;AAIP,OAAO,MAAMc,MAAM,GAAIL,MAAD,KAAa;AAC/BJ,EAAAA,IAAI,EAAEd,MADyB;AAE/BkB,EAAAA;AAF+B,CAAb,CAAf;AAIP,OAAO,MAAMM,QAAQ,GAAIN,MAAD,KAAa;AACjCJ,EAAAA,IAAI,EAAEb,QAD2B;AAEjCiB,EAAAA;AAFiC,CAAb,CAAjB;AAMP,eAAeP,YAAf","sourcesContent":["\nconst GET_USERS = 'GET_USERS'\nconst CHANGE_PAGE = 'CHANGE_PAGE'\nconst LOAD = 'LOAD'\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst DISABLE = 'DISABLE'\nconst ENABLE = 'ENABLE'\n\nlet initialState = {\n    users: [],\n    usersCount: 0,\n    trueUsersCount: 100,\n    activePage: 1,\n    isLoaded: false,\n    isDisabled: false\n}\n\nconst usersReducer = (state = initialState, action) => {\n    \n    switch (action.type) {\n        case GET_USERS:\n            return { ...state, users: [...action.users], usersCount: action.usersCount }\n        case CHANGE_PAGE:\n            return { ...state, activePage: action.activePage }\n        case LOAD:\n            return { ...state, isLoaded: action.isLoaded }\n        case FOLLOW:\n            return { ...state, users: state.users.map(item => item.id === action.userId ? {...item, followed: true } : item) }\n        case UNFOLLOW:\n            return { ...state, users: state.users.map(item => item.id === action.userId ? {...item, followed: false} : item) }\n        case DISABLE: \n            return { }\n        default: return state\n    }\n}\n\nexport const setUsers = (users, usersCount) => ({\n    type: GET_USERS,\n    users,\n    usersCount\n})\nexport const changePage = (activePage) => ({\n    type: CHANGE_PAGE,\n    activePage\n})\nexport const load = (isLoaded) => ({\n    type: LOAD,\n    isLoaded\n})\nexport const follow = (userId) => ({\n    type: FOLLOW,\n    userId\n})\nexport const unfollow = (userId) => ({\n    type: UNFOLLOW,\n    userId\n})\n\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}