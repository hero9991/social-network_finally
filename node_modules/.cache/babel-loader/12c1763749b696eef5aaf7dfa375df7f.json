{"ast":null,"code":"var _jsxFileName = \"/Users/a000/Desktop/react-soc-2/my-react-app/src/components/hoc/withRedirect.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst {\n  Redirect\n} = require(\"react-router-dom\");\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\n\nconst withRedirect = Component => {\n  debugger;\n\n  const withRedirectInnew = props => {\n    return props.isAuth ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }\n    });\n  };\n\n  return connect(mapStateToProps)(withRedirectInnew);\n};\n\nexport default withRedirect;","map":{"version":3,"sources":["/Users/a000/Desktop/react-soc-2/my-react-app/src/components/hoc/withRedirect.js"],"names":["React","connect","Redirect","require","mapStateToProps","state","isAuth","auth","withRedirect","Component","withRedirectInnew","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeC,OAAO,CAAC,kBAAD,CAA5B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADa,CAAZ,CAAxB;;AAIA,MAAME,YAAY,GAAIC,SAAD,IAAe;AAChC;;AACA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,WAAOA,KAAK,CAACL,MAAN,gBACH,oBAAC,SAAD,oBAAeK,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADG,gBAED,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN;AAGH,GAJD;;AAKA,SAAOV,OAAO,CAACG,eAAD,CAAP,CAAyBM,iBAAzB,CAAP;AACH,CARD;;AAUA,eAAeF,YAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nconst { Redirect } = require(\"react-router-dom\")\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nconst withRedirect = (Component) => {\n    debugger\n    const withRedirectInnew = (props) => {\n        return props.isAuth ? \n            <Component {...props}/>\n            : <Redirect to='/Login' />\n    }\n    return connect(mapStateToProps)(withRedirectInnew)\n}\n\nexport default withRedirect"]},"metadata":{},"sourceType":"module"}