{"ast":null,"code":"var _jsxFileName = \"/Users/a000/Desktop/react-soc-2/my-react-app/src/components/Profile/ProfileContainer.js\";\nimport React, { useEffect } from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { setProfile, load, setProfileThunk } from '../../redux/profile-reducer';\nimport { getProfile } from '../api/api';\nimport { withRouter } from 'react-router-dom';\nimport preloader from '../../assets/img/preloader.gif';\nimport s from './Profile.module.css';\n\nconst ProfileContainer = props => {\n  useEffect(() => {\n    let currentUser = props.match.params.id;\n    if (!currentUser) currentUser = props.myId;\n    props.load(false);\n    getProfile(currentUser).then(response => {\n      props.load(true);\n      props.setProfile(response.data);\n    });\n  }, [props.myId]);\n  if (!props.isLoaded) return /*#__PURE__*/React.createElement(\"img\", {\n    className: s.img,\n    src: preloader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 33\n    }\n  });\n  return /*#__PURE__*/React.createElement(Profile, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  profileInfo: state.profilePage.profileInfo,\n  isLoaded: state.profilePage.isLoaded,\n  myId: state.auth.id\n});\n\nconst profileConteinerR = withRouter(ProfileContainer);\nsetProfileThunk;\nexport default connect(mapStateToProps, {\n  setProfile,\n  load,\n  setProfileThunk\n})(profileConteinerR);","map":{"version":3,"sources":["/Users/a000/Desktop/react-soc-2/my-react-app/src/components/Profile/ProfileContainer.js"],"names":["React","useEffect","Profile","connect","setProfile","load","setProfileThunk","getProfile","withRouter","preloader","s","ProfileContainer","props","currentUser","match","params","id","myId","then","response","data","isLoaded","img","mapStateToProps","state","profileInfo","profilePage","auth","profileConteinerR"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,eAA3B,QAAkD,6BAAlD;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,CAAP,MAAc,sBAAd;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChCX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,WAAW,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACA,QAAI,CAACH,WAAL,EAAmBA,WAAW,GAAGD,KAAK,CAACK,IAApB;AACnBL,IAAAA,KAAK,CAACP,IAAN,CAAW,KAAX;AACAE,IAAAA,UAAU,CAACM,WAAD,CAAV,CAAwBK,IAAxB,CAA6BC,QAAQ,IAAI;AACrCP,MAAAA,KAAK,CAACP,IAAN,CAAW,IAAX;AACAO,MAAAA,KAAK,CAACR,UAAN,CAAiBe,QAAQ,CAACC,IAA1B;AACH,KAHD;AAIH,GARQ,EAQN,CAACR,KAAK,CAACK,IAAP,CARM,CAAT;AAUA,MAAI,CAACL,KAAK,CAACS,QAAX,EAAqB,oBAAO;AAAK,IAAA,SAAS,EAAEX,CAAC,CAACY,GAAlB;AAAuB,IAAA,GAAG,EAAEb,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACrB,sBACI,oBAAC,OAAD,oBAAaG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAGH,CAfD;;AAiBA,MAAMW,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,WAAW,EAAED,KAAK,CAACE,WAAN,CAAkBD,WADC;AAEhCJ,EAAAA,QAAQ,EAAEG,KAAK,CAACE,WAAN,CAAkBL,QAFI;AAGhCJ,EAAAA,IAAI,EAAEO,KAAK,CAACG,IAAN,CAAWX;AAHe,CAAZ,CAAxB;;AAKA,MAAMY,iBAAiB,GAAGpB,UAAU,CAACG,gBAAD,CAApC;AACAL,eAAe;AACf,eAAeH,OAAO,CAACoB,eAAD,EAAkB;AAACnB,EAAAA,UAAD;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA;AAAnB,CAAlB,CAAP,CAA8DsB,iBAA9D,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport Profile from './Profile'\nimport { connect } from 'react-redux'\nimport { setProfile, load, setProfileThunk } from '../../redux/profile-reducer'\nimport { getProfile } from '../api/api'\nimport { withRouter } from 'react-router-dom'\nimport preloader from '../../assets/img/preloader.gif'\nimport s from './Profile.module.css'\n\nconst ProfileContainer = (props) => {\n    useEffect(() => {\n        let currentUser = props.match.params.id\n        if (!currentUser)  currentUser = props.myId\n        props.load(false)\n        getProfile(currentUser).then(response => {\n            props.load(true)\n            props.setProfile(response.data)\n        })\n    }, [props.myId])\n\n    if (!props.isLoaded) return <img className={s.img} src={preloader} />\n    return (\n        <Profile {...props}/>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    profileInfo: state.profilePage.profileInfo,\n    isLoaded: state.profilePage.isLoaded,\n    myId: state.auth.id\n})\nconst profileConteinerR = withRouter(ProfileContainer)\nsetProfileThunk\nexport default connect(mapStateToProps, {setProfile, load, setProfileThunk})(profileConteinerR)"]},"metadata":{},"sourceType":"module"}